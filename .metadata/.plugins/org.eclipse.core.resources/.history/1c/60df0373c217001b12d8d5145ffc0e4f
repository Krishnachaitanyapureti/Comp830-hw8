package ObserverPattern;

import java.util.ArrayList;

public class SubscriberEven implements Subscriber{
	
	private int eventsHandled;
	private int turnOffThreshold;
	
	public SubscriberEven() {}
	 public void notifysubscriber(Event e, PublisherImpl pub) {
	        if (e.getEventDataValue() % 2 == 0) {
	            System.out.println("SubscriberEvens Event " + e.getEventSeqNum() + " is even: " + e.getEventDataValue());
	            this.addEvent(e);
	            if (events.size() > 14) {
	                this.unregisterMe(pub);
	            }
	        }
	    }
	
	 public void unregisterMe(PublisherImpl p) {
	        p.unregisterSubscriber(this);
	        events.clear();
	    }
	 
	public void addEvent(Event e) {
        events.add(e);
    }

    public ArrayList < Event > getEvents() {
        return events;
    }
	
	
//	private void setEventsHandled(Boolean b) {
//		
//	}
//
//	private boolean getEventsHandled() {
//		return false;
//		
//	}
//	
}